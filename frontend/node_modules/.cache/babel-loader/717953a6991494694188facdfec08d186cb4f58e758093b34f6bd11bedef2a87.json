{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mynew\\\\Desktop\\\\Inferno\\\\frontend\\\\src\\\\components\\\\LogitsChart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst topK = [{\n  token: 'fox',\n  logit: 5.2,\n  prob: 0.32\n}, {\n  token: 'dog',\n  logit: 4.8,\n  prob: 0.21\n}, {\n  token: 'cat',\n  logit: 4.1,\n  prob: 0.13\n}, {\n  token: 'jumps',\n  logit: 3.7,\n  prob: 0.09\n}, {\n  token: 'runs',\n  logit: 3.2,\n  prob: 0.07\n}];\nfunction LogitsChart() {\n  const maxLogit = Math.max(...topK.map(t => t.logit));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LogitsChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Top-k Logits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: 350,\n      height: topK.length * 32,\n      children: topK.map((t, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(0,${i * 32})`,\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: 0,\n          y: 8,\n          width: t.logit / maxLogit * 300,\n          height: 16,\n          fill: i === 0 ? 'var(--accent)' : '#888',\n          rx: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 310,\n          y: 20,\n          fontSize: 14,\n          fill: \"#333\",\n          children: [(t.prob * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 6,\n          y: 20,\n          fontSize: 14,\n          fill: \"#fff\",\n          children: t.token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, t.token, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = LogitsChart;\nexport default LogitsChart;\nvar _c;\n$RefreshReg$(_c, \"LogitsChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","topK","token","logit","prob","LogitsChart","maxLogit","Math","max","map","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","length","i","transform","x","y","fill","rx","fontSize","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/mynew/Desktop/Inferno/frontend/src/components/LogitsChart.js"],"sourcesContent":["import React from 'react';\n\nconst topK = [\n  { token: 'fox', logit: 5.2, prob: 0.32 },\n  { token: 'dog', logit: 4.8, prob: 0.21 },\n  { token: 'cat', logit: 4.1, prob: 0.13 },\n  { token: 'jumps', logit: 3.7, prob: 0.09 },\n  { token: 'runs', logit: 3.2, prob: 0.07 },\n];\n\nfunction LogitsChart() {\n  const maxLogit = Math.max(...topK.map(t => t.logit));\n  return (\n    <div className=\"LogitsChart\">\n      <h3>Top-k Logits</h3>\n      <svg width={350} height={topK.length * 32}>\n        {topK.map((t, i) => (\n          <g key={t.token} transform={`translate(0,${i * 32})`}>\n            <rect\n              x={0}\n              y={8}\n              width={t.logit / maxLogit * 300}\n              height={16}\n              fill={i === 0 ? 'var(--accent)' : '#888'}\n              rx={4}\n            />\n            <text x={310} y={20} fontSize={14} fill=\"#333\">{(t.prob * 100).toFixed(1)}%</text>\n            <text x={6} y={20} fontSize={14} fill=\"#fff\">{t.token}</text>\n          </g>\n        ))}\n      </svg>\n    </div>\n  );\n}\n\nexport default LogitsChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAG,CACX;EAAEC,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxC;EAAEF,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxC;EAAEF,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxC;EAAEF,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC1C;EAAEF,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAK,CAAC,CAC1C;AAED,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGP,IAAI,CAACQ,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACP,KAAK,CAAC,CAAC;EACpD,oBACEH,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA;MAAKiB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAEjB,IAAI,CAACkB,MAAM,GAAG,EAAG;MAAAP,QAAA,EACvCX,IAAI,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEU,CAAC,kBACbpB,OAAA;QAAiBqB,SAAS,EAAE,eAAeD,CAAC,GAAG,EAAE,GAAI;QAAAR,QAAA,gBACnDZ,OAAA;UACEsB,CAAC,EAAE,CAAE;UACLC,CAAC,EAAE,CAAE;UACLN,KAAK,EAAEP,CAAC,CAACP,KAAK,GAAGG,QAAQ,GAAG,GAAI;UAChCY,MAAM,EAAE,EAAG;UACXM,IAAI,EAAEJ,CAAC,KAAK,CAAC,GAAG,eAAe,GAAG,MAAO;UACzCK,EAAE,EAAE;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACFhB,OAAA;UAAMsB,CAAC,EAAE,GAAI;UAACC,CAAC,EAAE,EAAG;UAACG,QAAQ,EAAE,EAAG;UAACF,IAAI,EAAC,MAAM;UAAAZ,QAAA,GAAE,CAACF,CAAC,CAACN,IAAI,GAAG,GAAG,EAAEuB,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClFhB,OAAA;UAAMsB,CAAC,EAAE,CAAE;UAACC,CAAC,EAAE,EAAG;UAACG,QAAQ,EAAE,EAAG;UAACF,IAAI,EAAC,MAAM;UAAAZ,QAAA,EAAEF,CAAC,CAACR;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAVvDN,CAAC,CAACR,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWZ,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACY,EAAA,GAvBQvB,WAAW;AAyBpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}